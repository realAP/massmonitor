name: Build and analyze
on:
  workflow_dispatch:
    inputs:
      docker_image_tag:
        description: 'Docker Image Tag'
        required: false
        default: 'latest'
    run-name: Build and analyze
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results
jobs:

  publish-validator:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.determine_tag.outputs.TAG }}
    steps:
      - name: Determine image tag
        id: determine_tag
        run: |
          if [[ "${{ github.event.inputs.docker_image_tag }}" != "" ]]; then
            TAG=${{ github.event.inputs.docker_image_tag }}
          elif [[ "$GITHUB_REF_NAME" == "main" ]]; then
            TAG=dev
          elif [[ "$GITHUB_REF_TYPE" == "tag" ]]; then
            TAG=${GITHUB_REF_NAME}
          elif [[ "$GITHUB_REF_TYPE" == "branch" && "$GITHUB_REF_NAME" =~ ^20[0-9]{2}\.[0-9]+$ ]]; then
            TAG=${GITHUB_REF_NAME}-dev
          fi 
          echo $TAG
          echo "TAG=$TAG" >> $GITHUB_OUTPUT


  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: output docker image tag var
        run: |
          echo ${{ github.event.inputs.docker_image_tag }}        
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: corretto
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: '${{ runner.os }}-sonar'
          restore-keys: '${{ runner.os }}-sonar'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: '${{ runner.os }}-m2-${{ hashFiles(''**/pom.xml'') }}'
          restore-keys: '${{ runner.os }}-m2'
      - name: Build and analyze
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          SONAR_TOKEN: '${{ secrets.SONAR_TOKEN }}'
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=realAP_massmonitor -DskipTests=true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: devp1337/massmonitor:latest
      - name: Deployment
        env:
          DEPLOYMENT_SECRET: ${{ secrets.DEPLOYMENT_SECRET }}
        run: curl -X POST -H "Content-Type:application/json" -d {\"secret\":\"$DEPLOYMENT_SECRET\"} https://testp.de/hooks/redeploy-webhook
